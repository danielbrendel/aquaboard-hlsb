# AquaShell Half-Life Classic Soundboard main script file

require "array";
require "auto";
require "dx.window";
require "dx.graphics";
require "dx.sound";
require "strings";

#hideconsole;

const WND_RES_X int <= 600;
const WND_RES_Y int <= 800;
const INVALID_DX_HANDLE int <= -1;
const GLOBAL_VOLUME int <= 10;
const INFO_WEBSITE string <= "www.aquashell-scripting.com";

global szScriptPath string;
global szSpritePath string;
global szSoundPath string;
global bDxValid bool;
global hDefFont int;
global hInfoFont int;
global hOverlay int;
global hBanner int;
global iMouseXPos int;
global iMouseYPos int;
global bLinkHover bool;
global iLinkXPos int;
global iLinkYPos int;
global iLinkWidth int;
global iLinkHeight int;

array arrSoundScriptItems string 10 (
	"alien",
	"barnacle",
	"choose",
	"computalk",
	"duty",
	"freeman",
	"greetings",
	"headcrab",
	"horror",
	"warning"
);

getscriptpath szScriptPath;

set szSpritePath <= {%szScriptPath..\assets\sprites};
set szSoundPath <= {%szScriptPath..\assets\sounds};

for (i, 0, %arrSoundScriptItems.length, -inc) {
	exec "%szScriptPath/%arrSoundScriptItems[%i].dnys";
};

set iLinkXPos <= 159;
set iLinkYPos <= 750;
set iLinkWidth <= 235;
set iLinkHeight <= -15;

function checkLinkRange bool()
{
	result false;

	local corrlnkx int;
	local corrlnky int;
	local chklnkwidth int;
	local chklnkheight int;

	set corrlnkx <= %iLinkXPos;
	set corrlnky <= %iLinkYPos;
	set chklnkwidth <= %iLinkXPos;
	set chklnkheight <= %iLinkYPos;

	-= corrlnkx 5;
	-= corrlnky 50;
	+= chklnkwidth %iLinkWidth;
	+= chklnkheight %iLinkHeight;

	if (%iMouseXPos, -gr, %corrlnkx) {
		if (%iMouseXPos, -ls, %chklnkwidth) {
			if (%iMouseYPos, -gr, %corrlnky) {
				if (%iMouseYPos, -ls, %chklnkheight) {
					result true;
				};
			};
		};
	};
};

function DXWND_OnCreate void(hWnd int)
{
    local bGfxInit bool;

    print "Window handle: %hWnd";

    dx.gfx.initialize %hWnd %WND_WINDOWED %WND_RES_X %WND_RES_Y 0 0 0 0 bGfxInit;
    dx.snd.initialize %hWnd;

    dx.gfx.loadfont "Verdana" 12 25 hDefFont;
	dx.gfx.loadfont "Verdana" 8 20 hInfoFont;
	
	dx.gfx.setbgimage "%szSpritePath/background.png";
	
	dx.gfx.loadsprite "%szSpritePath/overlay.png" 1 %WND_RES_X %WND_RES_Y 1 false hOverlay;
	dx.gfx.loadsprite "%szSpritePath/banner.png" 1 600 162 1 false hBanner;

	for (i, 0, %arrSoundScriptItems.length, -inc) {
		call loadAssets_%arrSoundScriptItems[%i]() => void;
	};

    print "DX.Graphics and DX.Sound initialized";
};

function DXWND_OnDraw void()
{
	local iLinkColorRed int;
	local iLinkColorGreen int;
	local iLinkColorBlue int;
	local iLinkUnderlineX int;
	local iLinkUnderlineY int;

    dx.gfx.drawbegin;

	dx.gfx.drawsprite %hOverlay 1 1 0 0.0 0.0 true 0 0 0 150;
	dx.gfx.drawsprite %hBanner 1 30 0 0.0 0.0 false 0 0 0 0;
	
	for (i, 0, %arrSoundScriptItems.length, -inc) {
		call drawButton_%arrSoundScriptItems[%i]() => void;
	};

	call checkLinkRange() => bLinkHover;
	if (%bLinkHover, -eq, true) {
		set iLinkColorRed <= 255;
		set iLinkColorGreen <= 185;
		set iLinkColorBlue <= 90;
	} else {
		set iLinkColorRed <= 255;
		set iLinkColorGreen <= 165;
		set iLinkColorBlue <= 70;
	};

	dx.gfx.drawstring %hInfoFont "This project is fan-made and is not affiliated with Valve or Steam" 30 710 255 255 255 255;
	dx.gfx.drawstring %hInfoFont %INFO_WEBSITE %iLinkXPos %iLinkYPos %iLinkColorRed %iLinkColorGreen %iLinkColorBlue 255;

	if (%bLinkHover, -eq, true) {
		set iLinkUnderlineX <= %iLinkXPos;
		set iLinkUnderlineY <= %iLinkYPos;

		+= iLinkUnderlineY 22;

		dx.gfx.drawfilledbox %iLinkUnderlineX %iLinkUnderlineY 245 1 %iLinkColorRed %iLinkColorGreen %iLinkColorBlue 255;
	};

    dx.gfx.drawend;
};

function DXWND_OnKeyInput void(vKey int, bDown bool, bCtrlHeld bool, bShiftHeld bool, bAltHeld bool)
{
};

function DXWND_OnMouseInput void(x int, y int, iMouseKey int, bDown bool, bCtrlHeld bool, bShiftHeld bool, bAltHeld bool)
{
	local bInLinkRange bool;

	if (%iMouseKey, -eq, 0) {
		set iMouseXPos <= %x;
		set iMouseYPos <= %y;
	} elseif (%iMouseKey, -eq, 1) {
		if (%bDown, -eq, false) {
			for (i, 0, %arrSoundScriptItems.length, -inc) {
				call checkButtonClicked_%arrSoundScriptItems[%i]() => void;
			};

			call checkLinkRange() => bInLinkRange;
			if (%bInLinkRange, -eq, true) {
				sys "start https://%INFO_WEBSITE";
			};
		};
	};
};

function DXWND_OnDestroy void()
{
    print "Window destroyed";

    dx.gfx.release;
    dx.snd.release;
};

dx.wnd.set_event "OnCreate" DXWND_OnCreate;
dx.wnd.set_event "OnDraw" DXWND_OnDraw;
dx.wnd.set_event "OnKeyInput" DXWND_OnKeyInput;
dx.wnd.set_event "OnMouseInput" DXWND_OnMouseInput;
dx.wnd.set_event "OnDestroy" DXWND_OnDestroy;

dx.wnd.initialize "AquaBoard: Half-Life Classic Soundboard" %WND_RES_X %WND_RES_Y;

dx.wnd.is_valid bDxValid;

while (%bDxValid, -eq, true) {
	aut_calctimers;
    dx.wnd.process;
    dx.wnd.is_valid bDxValid;
};

dx.wnd.release;